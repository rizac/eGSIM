# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions


name: Python >= 3.11

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - name: update and fix missing packages
      run: sudo apt-get update --fix-missing 
    - name: Install xmllint
      run: sudo apt-get install python3-dev libhdf5-dev
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        # python manage.py test
        export DJANGO_SETTINGS_MODULE=egsim.settings_debug; python manage.py migrate && pytest --ignore=./tests/tmp/ -xvvv ./tests/


# pip install --no-binary=h5py h5py
# python manage.py egsim_init --noinput

# # name: Python >= 3.9

# on:
#   push:
#     branches: [ master ]
#     paths-ignore:
#       - "**/README.md"
#       - "**/LICENSE"
#       - "**/COPYING"
#       - "**/tmp"
      
#   pull_request:
#     branches: [ master ]
#     paths-ignore:
#       - "**/README.md"
#       - "**/LICENSE"
#       - "**/COPYING"
#       - "**/tmp"

# jobs:
#   build:

#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         python-version: ["3.10", "3.11"]

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v4
#       with:
#         python-version: ${{ matrix.python-version }}
#     - name: Install dependencies
#       run: |
#         pip install --upgrade pip setuptools wheel
#         pip install -r requirements.dev.txt
#         pip install -e git+https://github.com/rizac/gmpe-smtk.git#egg=smtk
#     # - name: Cleanup
#     #   run: |
#     #     find . \( -name '__pycache__' -or -name '*.pyc' \) -delete
#     #- name: Lint with flake8
#     #  run: |
#     #    # stop the build if there are Python syntax errors or undefined names
#     #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#     #    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#     #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Test with pytest-django
#       run: |
#         export DJANGO_SETTINGS_MODULE=egsim.settings_debug; python manage.py egsim_init && pytest --ignore=./tests/tmp/ -xvvv ./tests/
